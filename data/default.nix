{ nixpkgs ? <nixpkgs>
, config ? {}
}:
with (import nixpkgs config);
let
  mkDerivation =
    { elmsrcs ? ./elm-srcs.nix
    , srcs
    , srcdir ? "src"
    , name
    , targets ? []
    , versionsDat ? ./versions.dat
    , outputJavaScript ? false
    }:
    let sanitizePath = str:
        let path = builtins.filter (p: p != "..") (lib.splitString "/" str);
        in lib.concatStringsSep "/" (map (p: if p == "." then srcdir else p) path);
    in stdenv.mkDerivation {
      inherit name srcs;
      sourceRoot = ".";

      buildInputs = [ elmPackages.elm ]
        ++ lib.optional outputJavaScript nodePackages_10_x.uglify-js;

      patchPhase = let
        elmjson = let json = (lib.importJSON ./elm.json) // { source-directories = map sanitizePath srcs; };
        in writeText "elm.json" (builtins.toJSON json);
      in ''
        echo "Generating elm.json"
        cp \${elmjson} ./elm.json
        cat elm.json
      '';

      buildPhase = pkgs.elmPackages.fetchElmDeps {
        elmPackages = import elmsrcs;
        inherit versionsDat;
      };

      installPhase =
        let extension = if outputJavaScript then "js" else "html";
      in ''
        mkdir -p \$out/share/doc
        \${lib.concatStrings (map (module:
          let fullmodule = sanitizePath module;
              modulename = sanitizePath (lib.removePrefix "./" module);
          in ''
          echo "compiling \${modulename}"
          elm make \${fullmodule}.elm --output \$out/\${modulename}.\${extension} --docs \$out/share/doc/\${modulename}.json
          \${lib.optionalString outputJavaScript ''
            echo "minifying \${modulename}"
            uglifyjs $out/\${modulename}.\${extension} --compress 'pure_funcs="F2,F3,F4,F5,F6,F7,F8,F9,A2,A3,A4,A5,A6,A7,A8,A9",pure_getters,keep_fargs=false,unsafe_comps,unsafe' \\
                | uglifyjs --mangle --output=$out/\${modulename}.min.\${extension}
          ''}
        '') targets)}
      '';
    };
in mkDerivation {
  name = "${name}";
  elmsrcs = ./elm-srcs.nix;
  srcs = ${srcs};
  # Generated by elm2nix
  # should be *name* of current directory is used to find sources
  srcdir = "${srcdir}";
  # Please configure this line
  # Should be relative path as a string to modules you want to compile
  # excluding `.elm` extension
  targets = ["./Main"];
  outputJavaScript = false;
}
